import os
import requests
import pandas as pd
from datetime import datetime

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TICKERS = ["LQDT", "GOLD", "OBLG", "EQMX"]
DATA_DIR = "data"  # –ü–∞–ø–∫–∞ –¥–ª—è CSV
os.makedirs(DATA_DIR, exist_ok=True)

def fetch_history(ticker, last_date=None):
    print(f"\nüîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {ticker}...")

    url = f"https://iss.moex.com/iss/history/engines/stock/markets/tqtf/securities/{ticker}.json"
    params = {
        "iss.meta": "off",
        "iss.only": "history"
    }
    if last_date:
        params["from"] = last_date  # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–∏—Ç—å "till": last_date

    r = requests.get(url, params=params, headers={"User-Agent": "Mozilla/5.0"})

    print(f"\nüåê URL –∑–∞–ø—Ä–æ—Å–∞: {r.url}")
    print(f"HTTP —Å—Ç–∞—Ç—É—Å: {r.status_code}")
    print(f"–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞ MOEX:\n{r.text[:500]}")

    try:
        json_data = r.json()
    except ValueError:
        print(f"‚ùå –ù–µ JSON-–æ—Ç–≤–µ—Ç –æ—Ç MOEX –¥–ª—è {ticker}! –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return None

    if "history" not in json_data:
        print(f"‚ö† –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–ª–æ–∫–µ 'history' –¥–ª—è {ticker}")
        return None

    columns = json_data["history"]["columns"]
    data = json_data["history"]["data"]
    if not data:
        print(f"‚ö† –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {ticker}")
        return None

    df = pd.DataFrame(data, columns=columns)

    required_cols = ["TRADEDATE", "OPEN", "HIGH", "LOW", "CLOSE", "VOLUME"]
    df = df[[c for c in required_cols if c in df.columns]]

    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(df)} –¥–ª—è {ticker}")

    return df

# === –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê ===
for ticker in TICKERS:
    file_path = os.path.join(DATA_DIR, f"{ticker}.csv")

    last_date = None
    if os.path.exists(file_path):
        df_old = pd.read_csv(file_path)
        if "TRADEDATE" in df_old.columns:
            last_date = df_old["TRADEDATE"].max()
            print(f"üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞ –≤ {ticker}.csv: {last_date}")

    df_new = fetch_history(ticker, last_date)

    if df_new is None:
        print(f"‚ö† –ù–µ—Ç –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {ticker}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ.")
        continue

    if os.path.exists(file_path):
        df_old = pd.read_csv(file_path)
        df_merged = pd.concat([df_old, df_new]).drop_duplicates(subset=["TRADEDATE"]).sort_values("TRADEDATE")
    else:
        df_merged = df_new

    df_merged.to_csv(file_path, index=False)
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(df_merged)} —Å—Ç—Ä–æ–∫ ‚Üí {file_path}")

print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
